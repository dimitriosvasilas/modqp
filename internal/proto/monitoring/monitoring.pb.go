// Code generated by protoc-gen-go. DO NOT EDIT.
// source: api/protobuf-spec/monitoring.proto

package monitoring

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type WorkloadRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WorkloadRequest) Reset()         { *m = WorkloadRequest{} }
func (m *WorkloadRequest) String() string { return proto.CompactTextString(m) }
func (*WorkloadRequest) ProtoMessage()    {}
func (*WorkloadRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_05ceeedfe1d0b41c, []int{0}
}

func (m *WorkloadRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WorkloadRequest.Unmarshal(m, b)
}
func (m *WorkloadRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WorkloadRequest.Marshal(b, m, deterministic)
}
func (m *WorkloadRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WorkloadRequest.Merge(m, src)
}
func (m *WorkloadRequest) XXX_Size() int {
	return xxx_messageInfo_WorkloadRequest.Size(m)
}
func (m *WorkloadRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_WorkloadRequest.DiscardUnknown(m)
}

var xxx_messageInfo_WorkloadRequest proto.InternalMessageInfo

type ResponseTime struct {
	Duration             int64    `protobuf:"varint,1,opt,name=duration,proto3" json:"duration,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ResponseTime) Reset()         { *m = ResponseTime{} }
func (m *ResponseTime) String() string { return proto.CompactTextString(m) }
func (*ResponseTime) ProtoMessage()    {}
func (*ResponseTime) Descriptor() ([]byte, []int) {
	return fileDescriptor_05ceeedfe1d0b41c, []int{1}
}

func (m *ResponseTime) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResponseTime.Unmarshal(m, b)
}
func (m *ResponseTime) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResponseTime.Marshal(b, m, deterministic)
}
func (m *ResponseTime) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResponseTime.Merge(m, src)
}
func (m *ResponseTime) XXX_Size() int {
	return xxx_messageInfo_ResponseTime.Size(m)
}
func (m *ResponseTime) XXX_DiscardUnknown() {
	xxx_messageInfo_ResponseTime.DiscardUnknown(m)
}

var xxx_messageInfo_ResponseTime proto.InternalMessageInfo

func (m *ResponseTime) GetDuration() int64 {
	if m != nil {
		return m.Duration
	}
	return 0
}

func init() {
	proto.RegisterType((*WorkloadRequest)(nil), "workloadRequest")
	proto.RegisterType((*ResponseTime)(nil), "responseTime")
}

func init() {
	proto.RegisterFile("api/protobuf-spec/monitoring.proto", fileDescriptor_05ceeedfe1d0b41c)
}

var fileDescriptor_05ceeedfe1d0b41c = []byte{
	// 194 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x52, 0x4a, 0x2c, 0xc8, 0xd4,
	0x2f, 0x28, 0xca, 0x2f, 0xc9, 0x4f, 0x2a, 0x4d, 0xd3, 0x2d, 0x2e, 0x48, 0x4d, 0xd6, 0xcf, 0xcd,
	0xcf, 0xcb, 0x2c, 0xc9, 0x2f, 0xca, 0xcc, 0x4b, 0xd7, 0x03, 0x4b, 0x28, 0x09, 0x72, 0xf1, 0x97,
	0xe7, 0x17, 0x65, 0xe7, 0xe4, 0x27, 0xa6, 0x04, 0xa5, 0x16, 0x96, 0xa6, 0x16, 0x97, 0x28, 0x69,
	0x71, 0xf1, 0x14, 0xa5, 0x16, 0x17, 0xe4, 0xe7, 0x15, 0xa7, 0x86, 0x64, 0xe6, 0xa6, 0x0a, 0x49,
	0x71, 0x71, 0xa4, 0x94, 0x16, 0x25, 0x96, 0x64, 0xe6, 0xe7, 0x49, 0x30, 0x2a, 0x30, 0x6a, 0x30,
	0x07, 0xc1, 0xf9, 0x46, 0xee, 0x5c, 0x5c, 0xbe, 0x70, 0x23, 0x85, 0x2c, 0xb9, 0x04, 0x7c, 0xf2,
	0xd3, 0x83, 0x90, 0x34, 0x17, 0x0b, 0x09, 0xe8, 0xa1, 0x99, 0x2f, 0xc5, 0xab, 0x87, 0x6c, 0xbc,
	0x12, 0x83, 0x06, 0xa3, 0x01, 0xa3, 0x93, 0x79, 0x94, 0x69, 0x7a, 0x66, 0x49, 0x46, 0x69, 0x92,
	0x5e, 0x72, 0x7e, 0xae, 0x7e, 0x4a, 0x59, 0x62, 0x71, 0x66, 0x4e, 0x62, 0x31, 0xd8, 0xf5, 0xa9,
	0xa5, 0xc5, 0xfa, 0x99, 0x79, 0x25, 0xa9, 0x45, 0x79, 0x89, 0x39, 0x10, 0xef, 0x20, 0x79, 0x23,
	0x89, 0x0d, 0x2c, 0x62, 0x0c, 0x08, 0x00, 0x00, 0xff, 0xff, 0x18, 0x40, 0xc8, 0x92, 0xed, 0x00,
	0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MonitoringClient is the client API for Monitoring service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MonitoringClient interface {
	LogResponseTimes(ctx context.Context, opts ...grpc.CallOption) (Monitoring_LogResponseTimesClient, error)
}

type monitoringClient struct {
	cc *grpc.ClientConn
}

func NewMonitoringClient(cc *grpc.ClientConn) MonitoringClient {
	return &monitoringClient{cc}
}

func (c *monitoringClient) LogResponseTimes(ctx context.Context, opts ...grpc.CallOption) (Monitoring_LogResponseTimesClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Monitoring_serviceDesc.Streams[0], "/Monitoring/LogResponseTimes", opts...)
	if err != nil {
		return nil, err
	}
	x := &monitoringLogResponseTimesClient{stream}
	return x, nil
}

type Monitoring_LogResponseTimesClient interface {
	Send(*WorkloadRequest) error
	Recv() (*ResponseTime, error)
	grpc.ClientStream
}

type monitoringLogResponseTimesClient struct {
	grpc.ClientStream
}

func (x *monitoringLogResponseTimesClient) Send(m *WorkloadRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *monitoringLogResponseTimesClient) Recv() (*ResponseTime, error) {
	m := new(ResponseTime)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// MonitoringServer is the server API for Monitoring service.
type MonitoringServer interface {
	LogResponseTimes(Monitoring_LogResponseTimesServer) error
}

func RegisterMonitoringServer(s *grpc.Server, srv MonitoringServer) {
	s.RegisterService(&_Monitoring_serviceDesc, srv)
}

func _Monitoring_LogResponseTimes_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(MonitoringServer).LogResponseTimes(&monitoringLogResponseTimesServer{stream})
}

type Monitoring_LogResponseTimesServer interface {
	Send(*ResponseTime) error
	Recv() (*WorkloadRequest, error)
	grpc.ServerStream
}

type monitoringLogResponseTimesServer struct {
	grpc.ServerStream
}

func (x *monitoringLogResponseTimesServer) Send(m *ResponseTime) error {
	return x.ServerStream.SendMsg(m)
}

func (x *monitoringLogResponseTimesServer) Recv() (*WorkloadRequest, error) {
	m := new(WorkloadRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _Monitoring_serviceDesc = grpc.ServiceDesc{
	ServiceName: "Monitoring",
	HandlerType: (*MonitoringServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "LogResponseTimes",
			Handler:       _Monitoring_LogResponseTimes_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "api/protobuf-spec/monitoring.proto",
}
